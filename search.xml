<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo博客搭建</title>
      <link href="/2021/03/12/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2021/03/12/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><blockquote><p>官网：<a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a>  </p><p><img src="https://jiushiblog-1257256465.cos.ap-nanjing.myqcloud.com/hexo/node%E5%AE%89%E8%A3%851.png"></p><p>根据个人操作系统进行下载,我用的是Windows10 64位</p><p>如果不太清楚,可以打开电脑设置 -&gt; 系统 -&gt; 关于 进行查看</p></blockquote><blockquote><p>安装完成以后就是设置Nodejs的系统环境变量了,至于不知道环境变量在哪的自行百度</p><p><img src="https://jiushiblog-1257256465.cos.ap-nanjing.myqcloud.com/hexo/node%E5%AE%89%E8%A3%852.png"></p></blockquote><blockquote><p>配置环境最后一步将这几个环境变量全配一下,如果嫌麻烦可以自行百度nodejs环境配置,我这个虽然麻烦点但是后续不会有什么问题</p><p><img src="https://jiushiblog-1257256465.cos.ap-nanjing.myqcloud.com/hexo/node%E5%AE%89%E8%A3%853.png"></p></blockquote><blockquote><p>最后我们怎么判断环境配置成功了呢? 打开cmd命令行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>如果你效果跟我一直输入命令出现了版本号那么环境配置到此为止</p><p><img src="https://jiushiblog-1257256465.cos.ap-nanjing.myqcloud.com/hexo/node%E5%AE%89%E8%A3%854.png"></p></blockquote><h3 id="Git安装"><a href="#Git安装" class="headerlink" title="Git安装"></a>Git安装</h3><blockquote><p>相信这个工具大家都不陌生我这里只提供下载的镜像站: <a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/">https://registry.npmmirror.com/binary.html?path=git-for-windows/</a></p><p>下载安装以后使用命令显示版本号就是安装成功了</p> <span class="hide-inline"><button type="button" class="hide-button" style="">Click  </button><span class="hide-content">jiushiblog</span></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure></blockquote><h3 id="Visual-Studio-Code"><a href="#Visual-Studio-Code" class="headerlink" title="Visual Studio Code"></a>Visual Studio Code</h3><blockquote><p>我有一般不用这玩意,我用的IDEA,或者使用git命令直接push,想用这个看下面链接去了解把</p><p><a href="https://zhuanlan.zhihu.com/p/113222681">https://zhuanlan.zhihu.com/p/113222681</a></p></blockquote><h2 id="HEXO搭建"><a href="#HEXO搭建" class="headerlink" title="HEXO搭建"></a>HEXO搭建</h2><blockquote><p>官方文档: <a href="https://hexo.io/zh-cn/docs/commands">https://hexo.io/zh-cn/docs/commands</a></p></blockquote><h3 id="安装HEXO"><a href="#安装HEXO" class="headerlink" title="安装HEXO"></a>安装HEXO</h3><blockquote><p>使用npm安装hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></blockquote><h3 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init jiushiboy</span><br></pre></td></tr></table></figure><p>这个代码是什么意思呢?   </p><p>hexo init 是初始化用的命令 jiushiboy是我的文件名你可以自己起一个文件名</p><p><img src="https://jiushiblog-1257256465.cos.ap-nanjing.myqcloud.com/hexo/hexo%E5%AE%89%E8%A3%851.png"></p></blockquote><blockquote><p>Hexo结构介绍:</p><p><code>_config.yml</code>：网站的全局配置文件，设置包括 <code>网站标题</code>、<code>副标题</code>、<code>作者</code>、<code>关键字</code>和 <code>描述信息</code>等。<br><code>package.json</code>：框架的基本参数信息和它所依赖的插件，在 npm 安装时使用 <code>--save</code> 保存进去。<br><code>scaffolds</code>：本意是 “脚手架” 的意思，这里引申为模板文件夹。当你 hexo new [layout (布局)] [title] 的时候，Hexo 会根据该文件夹下的对应文件进行初始化构建。<br><code>source</code>：正如其名，source 文件夹存储一些直接来自用户的文件，它很重要，如果不出意外你的文章就是保存在这个文件夹下（_posts）。_posts 目录下的 md 文件，会被编译成 html 文件，放到 public 文件夹下。<br><code>public</code>：参考 source 文件夹，在初始化后是没有 public 文件夹的，除非 hexo g 编译生成静态文件后，public 文件夹会自动生成。使用 <code>hexo clean</code> 清除 <code>db.json</code> 和 <code>public</code> 文件夹下的所有文件。<br><code>themes</code>：主题文件夹，存储主题。主题可以在 Github 上 <code>clone</code> 。<br><code>.gitignore</code>：.gitignore 文件作用是声明不被 git 记录的文件，hexo init <code>&lt;folder&gt;</code> 也会产生一个 .gitignore 文件，可以先删除或者直接编辑，对 hexo 不会有影响。</p><p>配置_config.yml:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">九世</span> <span class="string">//网站标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">九世</span><span class="string">//副标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">这是一个在等风的网站</span><span class="string">//描述信息</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">道听途说,故等风十载</span><span class="string">//关键字</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">九世</span><span class="string">//作者</span></span><br><span class="line"><span class="attr">email:</span> <span class="string">jiushiboy@163.com</span> <span class="string">//邮箱(可不填)</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span><span class="string">//语言</span> <span class="string">可以在</span> <span class="string">/themes/landscape/languages</span> <span class="string">找到支持的语言</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span><span class="string">//时区</span> <span class="string">Asia/Shanghai</span></span><br></pre></td></tr></table></figure></blockquote><h3 id="新建new"><a href="#新建new" class="headerlink" title="新建new"></a>新建new</h3><blockquote><p>新建文章 -&gt; 自动生成文章至source&#x2F;_posts</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;我的第一篇文章&quot;</span></span><br></pre></td></tr></table></figure><p>新建页面 -&gt; 自动生成代码至 &#x2F;source 文件夹中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;jiushi&quot;</span></span><br></pre></td></tr></table></figure></blockquote><h3 id="清理缓存"><a href="#清理缓存" class="headerlink" title="清理缓存"></a>清理缓存</h3><blockquote><p>有时候改了一些东西发现并没有生效那么可以试试这个命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>简写: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br></pre></td></tr></table></figure></blockquote><h3 id="启动本地服务"><a href="#启动本地服务" class="headerlink" title="启动本地服务"></a>启动本地服务</h3><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>简写:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>启动服务复制 <code>http://localhost:4000/</code>到浏览器访问</p><p><code>在cmd控制台使用Ctrl+C按键来让服务停止</code></p></blockquote><h3 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h3><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>简写:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure></blockquote><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>简写:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>最基础的步骤:<br>hexo new “hello”   &#x2F;&#x2F;新建一个名叫hello的文章<br>hexo clean &#x2F;&#x2F;清理缓存<br>hexo s                    &#x2F;&#x2F;启动本地服务<br>hexo g                   &#x2F;&#x2F;生成文件<br>hexo d                  &#x2F;&#x2F;部署</p></blockquote><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><blockquote><p>这里我用的是butterfly主题,如果你们想用其他的可以自行百度了解</p></blockquote><h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><blockquote><p>下载命令(注意要在之前你hexo init 文件的根目录使用这些命令):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b `分支名` `Github主题地址` themes/文件名</span><br></pre></td></tr></table></figure><p>Ps: 主题是放在themes下面所以下载主题时需要指定 themes&#x2F;这里是你要取的主题文件名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>主题下载完之后,修改hexo的配置文件 _config.yml 将theme: butterfly</p></blockquote><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><blockquote><p>使用Butterfly主题需要安装pug以及stylus渲染器</p><p>下载命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>然后在Hexo根目录创建一个 _config_butterfly.yml 文件,将butterfly主题的<code>_config.yml</code>文件里面的内容复制到<code>_config_butterfly.yml</code>文件中来,这样我们每次修改就不需要进到主题里面去找配置文件,</p><p>那么Hexo的_config.yml 跟 _config_butterfly.yml文件的区别呢, 这两个文件会合并, _config_butterfly.yml文件优先级比较高</p></blockquote><h2 id="部署Hexo"><a href="#部署Hexo" class="headerlink" title="部署Hexo"></a>部署Hexo</h2><blockquote><p>如何部署博客,让别人也能访问呢</p><p>Github 提供了 Github Pages，Github Pages 是 Github 免费给开发者提供的一款托管个人网站的产品，目前只能托管静态内容，我们使用 Hexo 搭建的就是静态博客， 所以非常适合用来搭博客。<br>简单介绍一些步骤及命令。</p></blockquote><h3 id="注册github"><a href="#注册github" class="headerlink" title="注册github"></a>注册github</h3><blockquote><p>注册: <a href="https://github.com/">https://github.com/</a></p><p>注册好以后创建仓库,右上角有一个加号点击new repository</p><p><img src="https://jiushiblog-1257256465.cos.ap-nanjing.myqcloud.com/hexo/%E5%88%9B%E5%BB%BAgithub%E4%BB%93%E5%BA%931.png"></p></blockquote><h3 id="Hexo配置git"><a href="#Hexo配置git" class="headerlink" title="Hexo配置git"></a>Hexo配置git</h3><blockquote><p>Hexo安装部署插件,在Hexo根目录打开cmd安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>更改_config.yml配置文件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"><span class="built_in">type</span>: git</span><br><span class="line">repo: 这里放你仓库的git地址</span><br><span class="line">branch: master </span><br></pre></td></tr></table></figure><p>接下来就可以使用 hexo d进行部署拉</p><p>如果你报错了请查看 2.Hexo报错</p></blockquote><h2 id="Hexo自动部署"><a href="#Hexo自动部署" class="headerlink" title="Hexo自动部署"></a>Hexo自动部署</h2><blockquote><p>我们只需要提交Hexo源码然后Github Actions自动帮我们部署</p></blockquote><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><blockquote><p>创建一个私有的仓库用来存放源码然后执行自动部署</p></blockquote><h3 id="生成Token"><a href="#生成Token" class="headerlink" title="生成Token"></a>生成Token</h3><p><img src="https://jiushiblog-1257256465.cos.ap-nanjing.myqcloud.com/hexo/github%E7%94%9F%E6%88%90token.png"></p><h3 id="创建自动部署文件"><a href="#创建自动部署文件" class="headerlink" title="创建自动部署文件"></a>创建自动部署文件</h3><p><img src="https://jiushiblog-1257256465.cos.ap-nanjing.myqcloud.com/hexo/hexo%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B21.png"></p><blockquote><p>文件内容:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">name: 自动部署</span><br><span class="line"></span><br><span class="line">on: </span><br><span class="line">  push:</span><br><span class="line">    branches:</span><br><span class="line">      <span class="comment"># 根据你的仓库分支来写</span></span><br><span class="line">      - master</span><br><span class="line"></span><br><span class="line">  release:</span><br><span class="line">    types:</span><br><span class="line">      - published</span><br><span class="line"></span><br><span class="line"><span class="built_in">jobs</span>:</span><br><span class="line">  deploy:</span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line">    steps:</span><br><span class="line">    - name: 检查分支</span><br><span class="line">      uses: actions/checkout@v2</span><br><span class="line">      with:</span><br><span class="line">        ref: master</span><br><span class="line"></span><br><span class="line">    - name: 安装 Node</span><br><span class="line">      uses: actions/setup-node@v1</span><br><span class="line">      with:</span><br><span class="line">        node-version: <span class="string">&quot;12.x&quot;</span></span><br><span class="line">        </span><br><span class="line">    - name: 缓存依赖</span><br><span class="line">      uses: actions/cache@v2.1.1</span><br><span class="line">      <span class="built_in">id</span>: cache-dependencies</span><br><span class="line">      with:</span><br><span class="line">        path: node_modules</span><br><span class="line">        key: <span class="variable">$&#123;&#123;runner.OS&#125;</span>&#125;-<span class="variable">$&#123;&#123;hashFiles(&#x27;**/package-lock.json&#x27;)&#125;</span>&#125;    </span><br><span class="line">    </span><br><span class="line">    - name: 安装 Hexo</span><br><span class="line">      run: |</span><br><span class="line">        npm install hexo-cli -g</span><br><span class="line"></span><br><span class="line">    - name: 安装依赖</span><br><span class="line">      <span class="keyword">if</span>: steps.cache.outputs.cache-hit != <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      run: |</span><br><span class="line">        <span class="built_in">export</span> TZ=<span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line">        npm install --save</span><br><span class="line"></span><br><span class="line">    - name: 生成静态文件</span><br><span class="line">      run: |</span><br><span class="line">        hexo clean</span><br><span class="line">        hexo generate</span><br><span class="line">    </span><br><span class="line">    - name: 部署</span><br><span class="line">      run: |</span><br><span class="line">      <span class="comment"># 注意这个用户名用你自己的</span></span><br><span class="line">        git config --global user.name <span class="string">&quot;jiushiblog&quot;</span></span><br><span class="line">        <span class="comment"># 注意这个邮箱用你自己的</span></span><br><span class="line">        git config --global user.email <span class="string">&quot;1450495810@qq.com&quot;</span></span><br><span class="line">        <span class="comment"># 注意这个git地址用你自己仓库的</span></span><br><span class="line">        git <span class="built_in">clone</span> https://github.com/jiushiblog/jiushiblog.github.io.git</span><br><span class="line">        hexo deploy</span><br></pre></td></tr></table></figure><p><code>Ps:以上#的注释请认真观看,请使用自己的账号邮箱、git地址等</code> </p></blockquote><h3 id="上传仓库源码"><a href="#上传仓库源码" class="headerlink" title="上传仓库源码"></a>上传仓库源码</h3><blockquote><p><code>Ps: 注意你总共只需要创建两个仓库一个是存放静态文件的,一个是存放源码的,hexo d部署的代码是根据</code></p><p><code>_config.yml中的deploy中repo设置的git地址上传的静态文件。</code></p><p>上传源码就很简单了,首先第一步生成的token现在就要用到了</p><p>将_config.yml文件中的deploy改掉</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://这里放你的token@github.com/你的github用户名/你的静态代码仓库名.github.io.git</span><br><span class="line">  branch: master <span class="comment"># 默认使用 master 分支</span></span><br><span class="line">  message: Update Hexo Static Content <span class="comment"># 你可以自定义此次部署更新的说明</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 最终结果是这样的 一定不要写错,我上面实例用的是中文,你把你自己的信息替换掉这些中文OK?</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://H8YHtguMu2243z3u1uDB0gOA05pKMM@github.com/jiushiblog/jiushiblog.github.io.git</span><br><span class="line">  branch: master <span class="comment"># 默认使用 master 分支</span></span><br><span class="line">  message: Update Hexo Static Content <span class="comment"># 你可以自定义此次部署更新的说明</span></span><br></pre></td></tr></table></figure><p><code>Ps: 还有最后一步将代码用git上传到github仓库</code></p><p><img src="https://jiushiblog-1257256465.cos.ap-nanjing.myqcloud.com/hexo/hexo%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B22.png"></p></blockquote><blockquote><p>① 初始化git,初始化之后打开博客根目路会多出一个.git文件</p><p>这个文件可能是隐藏的不知道怎么弄可以参考: <a href="https://baijiahao.baidu.com/s?id=1726875156790575199&amp;wfr=spider&amp;for=pc">https://baijiahao.baidu.com/s?id=1726875156790575199&amp;wfr=spider&amp;for=pc</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init </span><br></pre></td></tr></table></figure><p>② 将你的源码添加到缓存区,这时候还没有真正提交到github仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add . </span><br></pre></td></tr></table></figure><p>③ 提交时需要填写注释</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span></span><br></pre></td></tr></table></figure><p>④将本地仓库与远程仓库建立连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin 你的仓库地址.git</span><br><span class="line"># 这里我用的是SSH 而不是https如果不会请网上看</span><br><span class="line">git remote add origin  git@github.com:jiushiblog/jiushiblog.git</span><br></pre></td></tr></table></figure><p>⑤真正开始提交,我这里是提交到master分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master # master 这里记得修改成你仓库的分支</span><br></pre></td></tr></table></figure><p><img src="https://jiushiblog-1257256465.cos.ap-nanjing.myqcloud.com/hexo/hexo%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B23.png"></p><p>跟我效果差不多就是成功了,如果出现time out 之类的请自行百度寻找解决方案,这个一般是github服务的问题</p><p>最后一步你提交完源码可以去查看github actions 是否自动帮你部署成功</p><p><img src="https://jiushiblog-1257256465.cos.ap-nanjing.myqcloud.com/hexo/hexo%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B24.png"></p></blockquote><h2 id="Hexo报错"><a href="#Hexo报错" class="headerlink" title="Hexo报错"></a>Hexo报错</h2><h3 id="使用hexo-d出现报错"><a href="#使用hexo-d出现报错" class="headerlink" title="使用hexo d出现报错"></a>使用hexo d出现报错</h3><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br><span class="line">Error: Spawn failed</span><br><span class="line"> at ChildProcess.&lt;anonymous&gt; (C:\Users\九世\Desktop\develop\jiushiboy\node_modules\hexo-util\lib\spawn.js:51:21)</span><br><span class="line"> at ChildProcess.emit (events.js:314:20)</span><br><span class="line"> at ChildProcess.cp.emit (C:\Users\九世\Desktop\develop\jiushiboy\node_modules\cross-spawn\lib\enoent.js:34:29)</span><br><span class="line"> at Process.ChildProcess._handle.onexit (internal/child_process.js:276:12)</span><br></pre></td></tr></table></figure><p>这个错误是因为本地的博客版本与远程的版本不一致，解决方法是删除博客目录下的.deploy_git文件夹，然后克隆远程(也就是将要发布的地址)的仓库到博客目录里面，然后改名字为.deploy_git，另外一个不那么绕的办法是把远端仓库删除，删除本地的.deploy_git，再次发布，不过这样做会导致之前的提交记录丢失。</p><p>解决方案: </p><p>​1.第一种删掉根目录下面的 .deploy_git文件重新部署</p><p>​2.第二种换成SSH密钥方式部署</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 博客根目录打开命令行</span><br><span class="line"># 第一行命令是设置git用户名</span><br><span class="line"># 第二行代码是设置用户的邮箱</span><br><span class="line"># 第三行代码是生成密钥</span><br><span class="line"># 当然这几行代码你不能完全复制我的,后面的账户邮箱都得用你自己的</span><br><span class="line">git config --global user.name &quot;example&quot;</span><br><span class="line">git config --global user.email example@example.com</span><br><span class="line">ssh-keygen -t rsa -C &quot;example@example.com&quot;</span><br></pre></td></tr></table></figure><p>然后找到生成的秘钥：位置在 <code>C:/Users/你电脑的用户名/.ssh</code><br>用记事本打开 <code>id_rsa.pub</code> 复制里面的内容</p><p>然后在github登陆你的账户打开setting设置找到SSH and GPG keys选项</p><p>点击New SSH key把你复制的粘贴到key里面title是你取的名字随便你</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
